%% SEZ to IJK Position and Velocity Vectors
% Inputs:L(Latitude),H,LST,ro,Az,El,ro_d,Az_d,El_d
% Outputs:R,V

function [R,V] = SEZ_2_IJK(L,H,LST,ro,Az,El,ro_d,Az_d,El_d)

% Constants
a_not = 6378.137;
e = 0.0818;

% Position
x = (((a_not)/sqrt(1 - (e^2)*(sind(L))^2))+H)*cosd(L);
z = (((a_not*(1-(e^2)))/sqrt(1 - (e^2)*(sind(L))^2))+H)*sind(L);
R_site = [x*cosd(LST); x*sind(LST); z ]; 

ro_sez = [(-ro*cosd(El)*cosd(Az));...
         (ro*cosd(El)*sind(Az));...
         (ro*sind(El))]; 

Ro_ijk = [cosd(-LST) sind(-LST) 0;...
        -sind(-LST) cosd(-LST) 0;...
        0 0 1]...
        *[cosd(-(90-L)) 0 -sind(-(90-L));...
        0 1 0;...
        sind(-(90-L)) 0 cosd(-(90-L))]...
        *ro_sez;     

R = R_site + Ro_ijk;

% Velocity
Ro_sez_d = [( (-ro_d*cosd(El)*cosd(Az)) + (ro*El_d*sind(El)*cosd(Az)) + (ro*Az_d*cosd(El)*sind(Az)) );...
            ( (ro_d*cosd(El)*sind(Az)) - (ro*El_d*sind(El)*sind(Az)) + (ro*Az_d*cosd(El)*cosd(Az)) );...
            ( (ro_d*sind(El)) + (ro*El_d*cosd(El)) )];
        
Ro_ijk_d =  [cosd(-LST) sind(-LST) 0;...
            -sind(-LST) cosd(-LST) 0;...
                              0 0 1]...
            *[cosd(-(90-L)) 0 -sind(-(90-L));...
                              0 1 0;...
            sind(-(90-L)) 0 cosd(-(90-L))]...
            *Ro_sez_d;
omega_theta =     [0;0;7.2721151467*(10^(-5))];
V = Ro_ijk_d + cross(omega_theta,R);
        
 fprintf('R = [%f I + %f J + %f K] km \n',R(1),R(2),R(3))
 fprintf('V = [%f I + %f J + %f K] km/s',V(1),V(2),V(3))
        
